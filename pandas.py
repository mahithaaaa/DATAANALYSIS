# -*- coding: utf-8 -*-
"""Pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uKOV7cQrjhTH_7986YGUJwUCLKehTGEW

# PANDAS
"""

#It loads a csv file
df=pd.read_csv("/content/drive/MyDrive/dataset/grades_withnulls.csv")
print(df)

import pandas as pd
a=["Mahitha","mounika","amulya","varshini"]
#It produces "a" as a series with provided index values
r=pd.Series(a,index=[1,2,3,4])
print(r)

#It loads a xlsx file
df=pd.read_excel("/content/drive/MyDrive/dataset/diabetcsv.xlsx",sheet_name=0)
print(df)

#Head by default prints the first 5 rows but we can specific number
df=pd.read_csv("/content/drive/MyDrive/dataset/grades_withnulls.csv")
print(df.head())

#Tail prints the first
print(df.tail())

#By default Head gives the first 5 rows but we can choose a specific number that we want(n).
print(df.head(10))

#By default tail gives the last 5 rows but we can choose a specific number that we want(n).
print(df.tail())

#It gives both the first 5 and last 5 rows as output
print(df.describe)
#Here rows and columns interchange
print(df.describe().T)

"""# shape
It gives the number of rows and columns that the file contains but if we give ‘0’ as parameter then it gives only the row count and if we give ‘1’ it gives the count of columns
"""

print(df.shape)
print(df.shape[0])
print(df.shape[1])

"""# **".columns"**
gives the names of the columns.
We can dirctly give a column name to print the whole column
"""

print(df.columns)
print(df['SEM1'])

"""# **"copy()"**
copies the df file and stores it into some other.
"""

df2=df.copy()
df2

"""# .loc[ ]”
is primarily label based.

Allowed inputs are:

A single label, e.g. 5 or 'a', (note that 5 is interpreted as a label of the index, and never as an integer position along the index).
A list or array of labels, e.g. ['a', 'b', 'c'].
A slice object with labels, e.g. 'a':'f'.
It can also be used to print a particular row
"""

df2.loc[2:5,'SEM1']=None
print(df2.head(10))
print(df2.loc[3])

"""# **df.isnull()**-
It returns boolean value if the given column or row is nan then it shows true or else false
We can also use this with **.sum()** function.It gives the number of **nan **values each column has


"""

df.isnull().tail(7)
print(df2.isnull().sum())

"""# df.index==val:
It gives the the row that we’ve given
val=row number
We can also with the help giving range that is as follows
df.index.isin(range(n1,n2)) then it prints rows from n1 to n2

"""

print(df[df.index==1])

print(df[df.index.isin(range(2,5))])

"""# df.dropna()-
It uses to drop the row that contains none value
"""

df3=df.copy()
df3=df.dropna()
df3

"""we can drop both rows and columns by using the below **function** **bold text** **bold text**"""

df2.dropna(inplace=True,axis=1)
df2

"""# df.fillna(val)-
It is used to fill the none value with whatever the value that we specified.
"""

mv=df['SEM1'].mean()
dfn=df.fillna(mv)
print(dfn)

"""# df.drop_duplicates()-
It drops repeated column
"""

import pandas as pd
df=pd.read_csv("/content/drive/MyDrive/dataset/grades_withnulls.csv")
df = df.drop_duplicates()
print(df)

"""# df.rename(columns = {'old name':'new name'})-
It renames the old column name with the given new column name.

"""

df.rename(columns = {'Grade':'GPA'}, inplace = True)
df.head()

"""WE CAN RENAME COLUMNS IN THE BELOW FORMAT ALSO"""

df.columns = ['Student_name', 'Mr/Ms', '1stsem', '2ndsem','3rdsem',
'F_Outcome','Placed?']
df.head()

"""We can also create new column by the help other columns as follows"""

df['Avg_score'] = (df['1stsem']+df['2ndsem']+df['3rdsem'])/3
df.head()

"""# df.groupby(column)-
When you apply the .groupby() function to a column,it returns a GroupBy object. This object allows you to perform various operations on the grouped data such as mean,max and min etc.
"""

df.groupby('Placed?').min()

"""# df.plot.line()
-It is going plot a graph for the specified column
"""

df[['3rdsem', '2ndsem']].plot.line()

df.plot.line(subplots=True)